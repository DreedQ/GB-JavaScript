// ДЗ №2.
// 1. Дан код:
// var a = 1, b = 1, c, d;
// c = ++a; alert(c);           // 2    Такой результат,  потому, что префиксная форма инкремента возвращает новое значение
// d = b++; alert(d);           // 1    А тут постфиксная форма, она возвращает старое значение(до увеличения)
// c = (2+ ++a); alert(c);      // 5    "а" была увеличена две стоки назад на 1 и равняется 2, и в самом выражении увеличивается ещё на 1, как итог двойка складывается с тройкой
// d = (2+ b++); alert(d);      // 4    Здесь та же ситуация, только вычисление идёт до увеличения "d"
// alert(a);                    // 3    В результате инкриминации дважды в выражениях выше "а" равняется трём.
// alert(b);                    // 3    В результате инкриминации дважды в выражениях выше "b" равняется трём.
// Почему код даёт именно такие результаты?


// Задача №2. Чему будет равен x в примере ниже?
// var a = 2;
// var x = 1 + (a *= 2);    //Тут происходит умножение 'a' на 2, после чего сложение с 1.
// Ответ: X = 5;


// Задача №3. Объявить две целочисленные переменные a и b и задать им произвольные начальные значения. Затем написать скрипт, который работает по следующему принципу:
// если a и b положительные, вывести их разность;
// если а и b отрицательные, вывести их произведение;
// если а и b разных знаков, вывести их сумму; ноль можно считать положительным числом.

// let a = prompt('Задайте значение читса "а"');
// let b = prompt('Задайте значение читса "b"');

// if (a >= 0 && b >= 0) {
//     return a - b;
// } else if (a < 0 && b < 0) {
//     return a * b;
// } else {
//     return a + b;
// }

// Задача №4. Присвоить переменной а значение в промежутке [0..15]. С помощью оператора switch организовать вывод чисел от a до 15.

// let a = prompt('Задайте число от 0 до 15');
// switch (a) {
//     case '0':
//         console.log(0);
//     case '1':
//         console.log(1);
//     case '2':
//         console.log(2);
//     case '3':
//         console.log(3);
//     case '4':
//         console.log(4);
//     case '5':
//         console.log(5);
//     case '6':
//         console.log(6);
//     case '7':
//         console.log(7);
//     case '8':
//         console.log(8);
//     case '9':
//         console.log(9);
//     case '10':
//         console.log(10);
//     case '11':
//         console.log(11);
//     case '12':
//         console.log(12);
//     case '13':
//         console.log(13);
//     case '14':
//         console.log(14);
//     case '15':
//         console.log(15);
//         break;
// }


// Задача №5. Реализовать основные 4 арифметические операции в виде функций с двумя параметрами. Обязательно использовать оператор return

function arifmeticSum(x, y) { return x + y; }

function arifmeticSub(x, y) { return x - y; }

function arifmeticMult(x, y) { return x * y; }

function arifmeticDiv(x, y) { return x / y; }


// Задача №6. Реализовать функцию с тремя параметрами: function mathOperation(arg1, arg2, operation), где arg1, arg2 – значения аргументов, operation – строка с названием операции. В зависимости от переданного значения операции выполнить одну из арифметических операций (использовать функции из пункта 5) и вернуть полученное значение (использовать switch).

function mathOperation(arg1, arg2, operation) {
    switch (operation) {
        case '+':
        case 'sum':
        case 'сложить':
            return arifmeticSum(arg1, arg2);
            break;
        case '-':
        case 'sub':
        case 'вычесть':
            return arifmeticSub(arg1, arg2);
            break;
        case '*':
        case 'mult':
        case 'умножить':
            return arifmeticMult(arg1, arg2);
            break;
        case '/':
        case 'div':
        case 'разделить':
            return arifmeticDiv(arg1, arg2);
            break;
    }

}


// Задача №7. *Сравнить null и 0. Попробуйте объяснить результат.
// Ответ: 'null' это специальная сущность, которая имеет значение "неизвестно", а "0" - нулевое количество, математические операции как сложение, умножение и вычитание дают "0", а вот деление приводит к 'NaN', при попытке сравнения больше/меньше/равно приводит к 'false'. 



// Задача №8. *С помощью рекурсии организовать функцию возведения числа в степень. Формат: function power(val, pow), где val – заданное число, pow – степень.

function power(val, pow) {
    if (pow == 1) {
        return val;
    } else {
        return val * power(val, pow - 1)
    };
}